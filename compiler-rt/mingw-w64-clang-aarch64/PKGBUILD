pkgname=mingw-w64-clang-aarch64-compiler-rt
pkgver=20.1.6
pkgrel=1
pkgdesc="Compiler runtime libraries for clang (mingw-w64)"
arch=('any')
url="https://compiler-rt.llvm.org/"
license=('Apache-2.0 WITH LLVM-exception')
depends=('gcc-libs' 'clang' 'mingw-w64-clang-aarch64-headers' 'mingw-w64-clang-aarch64-crt' 'mingw-w64-clang-aarch64-winpthreads')
makedepends=('cmake' 'ninja' 'python' 'lld' 'llvm')
options=('!buildflags' 'staticlibs' '!strip')
_source_base=https://github.com/llvm/llvm-project/releases/download/llvmorg-$pkgver
source=($_source_base/compiler-rt-$pkgver.src.tar.xz{,.sig}
        $_source_base/cmake-$pkgver.src.tar.xz{,.sig}
	$_source_base/llvm-$pkgver.src.tar.xz{,.sig})
sha256sums=('34ff389ce2c34ac1fe8badcf842265295daa91fd1149d69a7ebaf131edf01e4d'
            'SKIP'
            'b4b3efa5d5b01b3f211f1ba326bb6f0c318331f828202d332c95b7f30fca5f8c'
            'SKIP'
            'f09e304ca98bb809f492ec34f94f587361b4b0d06ed783fb3a41e7fb218e47a1'
            'SKIP')
validpgpkeys=('474E22316ABF4785A88C6E8EA2C794A986419D8A'  # Tom Stellard <tstellar@redhat.com>
              'D574BD5D1D0E98895E3BF90044F2485E45D59042') # Tobias Hieta <tobias@hieta.se>

_targets="aarch64-w64-mingw32"

prepare() {
  mv cmake{-$pkgver.src,}
  mv llvm{-$pkgver.src,}
}

build() {
  cd compiler-rt-$pkgver.src

  for _target in ${_targets}; do
    export CC=clang CXX=clang++ ASM=clang AR=llvm-ar RANLIB=llvm-ranlib DLLTOOL=llvm-dlltool
    export ASMFLAGS="-rtlib=compiler-rt -fuse-ld=lld -mguard=cf -target $_target -Xclang -triple -Xclang $_target"
    export CFLAGS="-rtlib=compiler-rt -fuse-ld=lld -mguard=cf -target $_target -Xclang -triple -Xclang $_target"
    export CXXFLAGS="-rtlib=compiler-rt -fuse-ld=lld -mguard=cf -stdlib=libc++ -target $_target -Xclang -triple -Xclang $_target"

    local llvmtarget=${_target%%-*}
    local cmake_args=(
        -G Ninja
        -B build-${_target}
        -DCMAKE_BUILD_TYPE=Release
        -DCMAKE_CROSSCOMPILING=YES
        -DCMAKE_SYSTEM_NAME=Windows
        -DCMAKE_SYSTEM_PROCESSOR=${_target%%-*}
        -DCMAKE_MODULE_PATH="$srcdir/llvm/cmake/modules;$srcdir/cmake/Modules"
        -DCMAKE_INSTALL_PREFIX=/usr/$_target
        -DCMAKE_FIND_ROOT_PATH=/usr/$_target
        -DCMAKE_FIND_ROOT_PATH_MODE_INCLUDE=ONLY
        -DCMAKE_FIND_ROOT_PATH_MODE_PACKAGE=ONLY
        -DCMAKE_FIND_ROOT_PATH_MODE_LIBRARY=ONLY
        -DCMAKE_SKIP_RPATH=ON
        -DCMAKE_C_COMPILER_TARGET=$_target
        -DCMAKE_C_COMPILER_WORKS=1
        -DCMAKE_CXX_COMPILER_WORKS=1
        -DLLVM_DIR="$srcdir"/llvm
        -DSANITIZER_CXX_ABI=libc++
        -DCOMPILER_RT_OS_DIR=windows
        -DCOMPILER_RT_BUILD_LIBFUZZER=OFF
        -DCOMPILER_RT_BUILD_PROFILE=OFF
        -DCOMPILER_RT_BUILD_SANITIZERS=OFF
        -DCOMPILER_RT_BUILD_BUILTINS=ON
        -DCOMPILER_RT_BUILD_XRAY=OFF
        -DCOMPILER_RT_DEFAULT_TARGET_ONLY=ON
        -DCOMPILER_RT_USE_BUILTINS_LIBRARY=ON
        -DCOMPILER_RT_EXCLUDE_ATOMIC_BUILTIN=FALSE
        -DCOMPILER_RT_INSTALL_PATH=/usr/lib/clang/${pkgver%%.*}
    )
    cmake "${cmake_args[@]}"
    cmake --build build-${_target} --verbose
  done
}

package() {
  cd compiler-rt-$pkgver.src

  for _target in ${_targets}; do
    DESTDIR="$pkgdir" cmake --install build-${_target}
    rm -vr "$pkgdir"/usr/lib/clang/${pkgver%%.*}/include
  done
  install -Dm644 LICENSE.TXT "$pkgdir/usr/share/licenses/$pkgname/LICENSE"
}
