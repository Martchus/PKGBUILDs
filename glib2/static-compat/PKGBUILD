# Contributor: Jan Alexander Steffens (heftig) <heftig@archlinux.org>
# Contributor: Jan de Groot <jgc@archlinux.org>

_pkgname=glib2
pkgname=static-compat-$_pkgname
pkgver=2.82.2
pkgrel=1
pkgdesc="Low level core library"
url="https://gitlab.gnome.org/GNOME/glib"
arch=(x86_64)
depends=(static-compat-pcre2 static-compat-libffi static-compat-util-linux static-compat-zlib)
makedepends=(gettext shared-mime-info python libelf git static-compat-meson)
checkdepends=(desktop-file-utils)
options=(!strip !emptydirs staticlibs)
source=(
  "git+https://gitlab.gnome.org/GNOME/glib.git#tag=$pkgver"
  "git+https://gitlab.gnome.org/GNOME/gvdb.git"
  0001-glib-compile-schemas-Remove-noisy-deprecation-warnin.patch
)
b2sums=('3ff7ea88d69b945524b28211cd11373856e78813ea2795c6aff040fb264d6323edcd2fd2782d827936bdee34238a6995b2c7a6b51eeac49de583a21a0072a2d2'
        'SKIP'
        '94c73ca7070c239494873dd52d6ee09382bbb5b1201f7afd737cfa140b1a2fb0744b2c2831baf3943d1d072550c35888d21ce6f19f89481ff9d1a60d9a0b30e0')

pkgver() {
  cd glib
  git describe --tags | sed 's/[^-]*-g/r&/;s/-/+/g'
}

prepare() {
  cd glib

  # Suppress noise from glib-compile-schemas.hook
  git apply -3 ../0001-glib-compile-schemas-Remove-noisy-deprecation-warnin.patch

  git submodule init
  git submodule set-url subprojects/gvdb "$srcdir/gvdb"
  git -c protocol.file.allow=always submodule update
}

build() {
  export CFLAGS+=" -DG_DISABLE_CAST_CHECKS"
  export LDFLAGS+=" -lblkid"
  source static-compat-environment
  static-compat-meson glib build \
    -D selinux=disabled \
    -Dsysprof=disabled \
    -D man=false \
    -D gtk_doc=false
  meson compile -C build
}

check() {
  source static-compat-environment
  meson test -C build --no-suite flaky --no-suite slow --print-errorlogs || true
}

package() {
  source static-compat-environment
  DESTDIR="$pkgdir" meson install -C build

  # Strip messes up the LTO-enabled archive's index so strip libs manually and then run ranlib again
  find "$pkgdir" -name '*.a' -exec strip $STRIP_STATIC {} \;
  find "$pkgdir" -name '*.a' -exec ranlib {} \;

  export PYTHONHASHSEED=0
  python -m compileall -d "$static_compat_prefix"/share/glib-2.0/codegen \
    "$pkgdir/$static_compat_prefix/share/glib-2.0/codegen"
  python -O -m compileall -d "$static_compat_prefix"/share/glib-2.0/codegen \
    "$pkgdir/$static_compat_prefix/share/glib-2.0/codegen"
}

# vim:set sw=2 et:
