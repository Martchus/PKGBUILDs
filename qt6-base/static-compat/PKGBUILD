# Maintainer: Martchus <martchus@gmx.net>

# All my PKGBUILDs are managed at https://github.com/Martchus/PKGBUILDs where
# you also find the URL of a binary repository.

# This file is created from PKGBUILD.sh.ep contained by the mentioned repository.
# Do not edit it manually! See README.md in the repository's root directory
# for more information.

# All patches are managed at https://github.com/Martchus/qtbase

pkgname=static-compat-qt6-base
_qtver=6.8.1
pkgver=${_qtver/-/}
pkgrel=1
arch=(x86_64)
url='https://www.qt.io'
license=(GPL3 LGPL3 FDL custom)
pkgdesc='A cross-platform application and UI framework'
depends=(shared-mime-info
         static-compat-brotli static-compat-dbus static-compat-double-conversion
         static-compat-fontconfig static-compat-libb2 static-compat-libglvnd
         static-compat-libice static-compat-libinput static-compat-libjpeg-turbo
         static-compat-libxdamage static-compat-libxkbcommon static-compat-libxmu
         static-compat-libxxf86vm static-compat-md4c static-compat-pcre2
         static-compat-sqlite static-compat-xcb-util-image static-compat-xcb-util-keysyms
         static-compat-xcb-util-renderutil static-compat-xcb-util-cursor static-compat-vulkan-headers
         static-compat-xcb-util-wm static-compat-xorgproto static-compat-xtrans)
makedepends=(static-compat-cmake xdg-utils ninja)
options=('!strip' '!buildflags' 'staticlibs' '!emptydirs')
_pkgfqn="qtbase-everywhere-src-${_qtver}"
source=("https://download.qt.io/official_releases/qt/${pkgver%.*}/${_qtver}/submodules/${_pkgfqn}.tar.xz"
        '0001-Use-CMake-s-default-import-library-suffix.patch'
        '0002-Fix-finding-D-Bus.patch'
        '0003-Fix-using-static-PCRE2-and-DBus-1.patch'
        '0004-Fix-transitive-dependencies-of-static-libraries.patch'
        '0005-Fix-libjpeg-workaround-for-conflict-with-rpcndr.h.patch'
        '0006-Support-finding-static-MariaDB-client-library.patch'
        '0007-Allow-overriding-CMAKE_FIND_LIBRARY_SUFFIXES-to-pref.patch'
        '0008-Find-fontconfig-via-pkg-config-for-correct-handling-.patch'
        '0009-Fix-dependency-of-xcb-image-on-xcb-util.patch'
        '0010-Allow-using-properties-of-PkgConfig-targets-for-glib.patch'
        '0011-Allow-using-properties-of-PkgConfig-targets-for-Wayl.patch'
        '0012-Allow-overriding-preference-for-shared-libzstd-libra.patch'
        '0013-Fix-errors-due-to-disabled-exceptions-with-cpp_winrt.patch'
        '0014-Fix-setting-exception-flags-of-plugin-targets.patch'
        '0015-Link-corelib-correctly-against-runtimeobject-when-co.patch'
        '0016-Workaround-linker-error-about-missing-symbol-__sync_.patch'
        '0017-Workaround-Unknown-CMake-command-_qt_test_emscripten.patch'
        '0018-Fix-configuration-when-EMSCRIPTEN_ROOT-is-an-absolut.patch'
        '0019-Android-Quit-hosting-Context-only-when-app-is-entire.patch'
        '0020-Allow-handling-Android-activity-lifecycle-by-user-pr.patch')
sha256sums=('40b14562ef3bd779bc0e0418ea2ae08fa28235f8ea6e8c0cb3bce1d6ad58dcaf'
            '48ec451323a8293be67869a26dcccd8573425d96d2be80c2680502ea7af06663'
            '6ff5c6fcafab187ab9e636759ac61341292a1d0726bf9506df527da08b61ec32'
            'be26f1cd11086e582e27e90055ce89668d009d05bbc9928fcc2c684e5a2c3f7d'
            '158c734b400cbbfad209ce2ca58cd2c9627a2e1555f9b81f1d303aacae2bf232'
            '0e284eac74f1865693bd2799480eee8be43eb7b94a5a736cd578bcc4bf8397f4'
            'd1857b5ce72e0534df5396919802d77f7a084fc94478ccb7b1a73ecccfe1c473'
            'c3d77455ceb849b2356af6d86585759d7fad219203cf7e842074af9b53d8edbd'
            'e0d81fbb03fa65a0c8afe7e2920a8f08dd006f0fb5b3f67d56f3f55da349a69f'
            '30de2ff2a83f9b7e675e01e1fba9ad4a471f04bb83f607cd3abdfd19c9875d51'
            '61cd378e1b74fc8da0d82d139f35dedcbca32399cdff064f41dadb7c108ba64b'
            '0a0e162ca753e85e9f249dd3515cd1ae8a74ab01ffd4f87e8f6720582adcae10'
            '2a3711ced287367d8b4c667c47ff9bfa98d73f679fbb131025dcacc6aa5dc15e'
            '2fdba643908e000b9d1742bd04d74222a63c7f677cc6c24015ca5055b8333ca4'
            '995923a07aff2c78b0f094fabab1c1539e12148546c9d0280f0f21fe06a4aa56'
            'ce056c17b84679ef0d75374154e483c37732d2505580f607f3542a65760cffb6'
            '9b9e8bb6306e76df261c016cdbb53f845e560231806b34aee2e31ff4cf69d9ea'
            '5106989fdf153494b98685924c8fded94b51a5a12c49ae3626c71f9733ac4e01'
            '2b5a2dcec2577e7d30e27b3a3b46ba0185937384817a985b8333f6e4a91b9c6c'
            '550e89a1afb42269659bc87b645a8ce4f6a50586dea8a206d621a5fc1c030939'
            '508c84c8863e088f2463cd276c10f1462bfda75d8f60eef239b66f1361894991')

prepare () {
  cd $_pkgfqn

  # apply patches; further descriptions can be found in patch files itself
  for patch in "$srcdir/"*.patch; do
    msg2 "Applying patch $patch"
    patch -p1 -i "$patch"
  done
}

build() {
  check_buildoption ccache y && ccache_args='
    -DCMAKE_C_COMPILER_LAUNCHER=ccache
    -DCMAKE_CXX_COMPILER_LAUNCHER=ccache'
  source static-compat-environment
  export PATH=$PWD:$PATH
  printf '#!/usr/bin/bash\nexec /usr/bin/pkg-config --static "$@"\n' > pkg-config
  chmod +x pkg-config
  static-compat-cmake -G Ninja -B build -S $_pkgfqn \
    $ccache_args \
    -DCMAKE_SKIP_INSTALL_RPATH=ON \
    -DINSTALL_BINDIR=lib/qt6/bin \
    -DINSTALL_DOCDIR=share/doc/qt6 \
    -DINSTALL_ARCHDATADIR=lib/qt6 \
    -DINSTALL_DATADIR=share/qt6 \
    -DINSTALL_INCLUDEDIR=include/qt6 \
    -DINSTALL_MKSPECSDIR=lib/qt6/mkspecs \
    -DINSTALL_EXAMPLESDIR=share/doc/qt6/examples \
    -DINPUT_openssl=linked \
    -DQT_FEATURE_openssl_linked=ON \
    -DQT_FEATURE_static_runtime=ON \
    -DQT_FEATURE_system_sqlite=ON \
    -DQT_FEATURE_system_xcb_xinput=ON \
    -DQT_FEATURE_xcb=ON \
    -DQT_FEATURE_xcb_sm=ON \
    -DQT_FEATURE_icu=OFF \
    -DQT_FEATURE_kms=OFF \
    -DQT_FEATURE_eglfs=OFF \
    -DQT_FEATURE_gbm=OFF \
    -DQT_FEATURE_linuxfb=OFF \
    -DQT_FEATURE_gssapi=OFF \
    -DQT_FEATURE_fontconfig=ON \
    -DQT_FEATURE_dynamicgl=OFF \
    -DQT_FEATURE_opengl_dynamic=OFF \
    -DGLIB2_USE_PKG_CONFIG=ON \
    -DWAYLAND_USE_PKG_CONFIG=ON \
    -DCMAKE_DISABLE_FIND_PACKAGE_harfbuzz=TRUE \
    -DCMAKE_INSTALL_OLDINCLUDEDIR=$static_compat_prefix/include \
    -DGSSAPI_INCLUDE_DIRS=$static_compat_prefix/include \
    -DICU_INCLUDE_DIR=$static_compat_prefix/include \
    -DLibdrm_INCLUDE_DIR=$static_compat_prefix/include \
    -DGLESv2_INCLUDE_DIR=$static_compat_prefix/include \
    -Dgbm_INCLUDE_DIR=$static_compat_prefix/include
  VERBOSE=1 cmake --build build
}

package() {
  source static-compat-environment
  DESTDIR="$pkgdir" cmake --install build

  install -Dm644 $_pkgfqn/LICENSES/* -t "$pkgdir"/usr/share/licenses/$pkgname

  # Drop QMAKE_PRL_BUILD_DIR because reference the build dir
  find "$pkgdir" -type f -name '*.prl' \
    -exec sed -i -e '/^QMAKE_PRL_BUILD_DIR/d' {} \;

  rm -r "$pkgdir/$static_compat_prefix"/share/doc
}
