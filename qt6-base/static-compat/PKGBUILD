# Maintainer: Martchus <martchus@gmx.net>

# All my PKGBUILDs are managed at https://github.com/Martchus/PKGBUILDs where
# you also find the URL of a binary repository.

# This file is created from PKGBUILD.sh.ep contained by the mentioned repository.
# Do not edit it manually! See README.md in the repository's root directory
# for more information.

# All patches are managed at https://github.com/Martchus/qtbase

pkgname=static-compat-qt6-base
_qtver=6.9.1
pkgver=${_qtver/-/}
pkgrel=1
arch=(x86_64)
url='https://www.qt.io'
license=(GPL3 LGPL3 FDL custom)
pkgdesc='A cross-platform application and UI framework'
depends=(shared-mime-info
         static-compat-brotli static-compat-dbus static-compat-double-conversion
         static-compat-fontconfig static-compat-libb2 static-compat-libglvnd
         static-compat-libice static-compat-libinput static-compat-libjpeg-turbo
         static-compat-libxdamage static-compat-libxkbcommon static-compat-libxmu
         static-compat-libxxf86vm static-compat-md4c static-compat-pcre2
         static-compat-sqlite static-compat-xcb-util-image static-compat-xcb-util-keysyms
         static-compat-xcb-util-renderutil static-compat-xcb-util-cursor static-compat-vulkan-headers
         static-compat-xcb-util-wm static-compat-xorgproto static-compat-xtrans)
makedepends=(static-compat-cmake xdg-utils ninja)
options=('!strip' '!buildflags' 'staticlibs' '!emptydirs')
_pkgfqn="qtbase-everywhere-src-${_qtver}"
source=("https://download.qt.io/official_releases/qt/${pkgver%.*}/${_qtver}/submodules/${_pkgfqn}.tar.xz"
        '0001-Use-CMake-s-default-import-library-suffix.patch'
        '0002-Fix-finding-D-Bus.patch'
        '0003-Fix-using-static-PCRE2-and-DBus-1.patch'
        '0004-Fix-transitive-dependencies-of-static-libraries.patch'
        '0005-Fix-libjpeg-workaround-for-conflict-with-rpcndr.h.patch'
        '0006-Support-finding-static-MariaDB-client-library.patch'
        '0007-Allow-overriding-CMAKE_FIND_LIBRARY_SUFFIXES-to-pref.patch'
        '0008-Find-fontconfig-via-pkg-config-for-correct-handling-.patch'
        '0009-Fix-dependency-of-xcb-image-on-xcb-util.patch'
        '0010-Allow-using-properties-of-PkgConfig-targets-for-glib.patch'
        '0011-Allow-using-properties-of-PkgConfig-targets-for-Wayl.patch'
        '0012-Allow-overriding-preference-for-shared-libzstd-libra.patch'
        '0013-Fix-errors-due-to-disabled-exceptions-with-cpp_winrt.patch'
        '0014-Link-corelib-correctly-against-runtimeobject-when-co.patch'
        '0015-Workaround-linker-error-about-missing-symbol-__sync_.patch'
        '0016-Workaround-Unknown-CMake-command-_qt_test_emscripten.patch'
        '0017-Fix-configuration-when-EMSCRIPTEN_ROOT-is-an-absolut.patch'
        '0018-Allow-handling-Android-activity-lifecycle-by-user-pr.patch'
        '0019-Avoid-compile-error-due-to-inconsistent-use-of-noexc.patch'
        '0020-Allow-keeping-Android-app-in-background-with-QtQuick.patch'
        '0021-Allow-resuming-native-app-when-Android-activity-is-r.patch'
        '0022-Enable-minimal-and-offscreen-plugins-when-compiling-.patch')
sha256sums=('40caedbf83cc9a1959610830563565889878bc95f115868bbf545d1914acf28e'
            '544c2f67bf1ac7120d27f91cf4a9fbcca6dd95b7b052c8f0a918ed19ff539369'
            '14ec7ee5f293c920714fd6b6c601899524228e30d2d7b9c099c8284aee8aa2e2'
            '7a414af1e20d82e6099d2b804604b8ec046ffe1e9b8598e61352eb4b1459b575'
            'b0e26f68c6eb322c9381b004b77868fe5cd391de6935c06e1a57a7e9de2a7fb8'
            '27a90098279a641fdf8b307c220d1c1f4fc52e38d3f9a5b7399b9e1ac47efc5f'
            'c299df255e55b8326756fc9fcbfbd1fc229b4464e0ae94a6c3efa52d8ceeb1fe'
            '00e3e19181211e580f3f52e9ac9b5d1500421d84b022fa39d909cb1ad61568e2'
            'f1067d3eb31b31c1349e712f4b7e5b66e91243bc6f79e31ac62bb45145c46f42'
            'dc60ecb8ea20cfb40ca2211a557fdf1410e911bacd56f57412487a0c8757cdfd'
            '9c5d6bdc6afd9ed8a71554a8de0f16ab6381ac7ba9e542b022f20c5afe44854c'
            'b1b92fe333d68d2d0fe367c6ccc68d34de37d5b173743fd8248d6029e238e243'
            '65daa2eef44bead09e14a604022edc33be8364c7ce4e9ca28d63bcdc137a0157'
            '52b7c317041bbf5969b8d4097aef15b08d94d0422edc737d6396ca43cbdb82bd'
            'b08a8b1576805de2c225e6205f4209389c478dd6c349b65b600402c6a31cbbe7'
            '8625270f35a9a00897b2c323da1cc8d0b2708a062bc26cb4e0734db66a1f1e7c'
            '8840952a75c2645c15fe5c1f3407ee9e655302f1fee4e58a6f2610233168300f'
            '93f2c40872fcafe75121a327edc371bcbcfe36bcccdcc38514609f6784ed32ab'
            '384fa41e4fb76f8c7f357cd4dc02846252dd4ed0f918e408a9bf76b7434d7bb4'
            '21c3644c60c4fcabb2836817f5b85edb61ea7b0324c674264d0fa1d02a604da9'
            '6f529e380000a71008c5dcd05dbc14f47d8eb4484f98eecf302a9b8b337aab16'
            'e4832c218b382838a4c0b0f613d7ec0228866f9f4ed61a7c04c8acc0312d95d5'
            '887369ee0715a12a6f76becc6d85964c4ccce828c5404c86916d48e83e22b7ca')

prepare () {
  cd $_pkgfqn

  # apply patches; further descriptions can be found in patch files itself
  for patch in "$srcdir/"*.patch; do
    msg2 "Applying patch $patch"
    patch -p1 -i "$patch"
  done
}

build() {
  check_buildoption ccache y && ccache_args='
    -DCMAKE_C_COMPILER_LAUNCHER=ccache
    -DCMAKE_CXX_COMPILER_LAUNCHER=ccache'
  source static-compat-environment
  export PATH=$PWD:$PATH
  printf '#!/usr/bin/bash\nexec /usr/bin/pkg-config --static "$@"\n' > pkg-config
  chmod +x pkg-config
  static-compat-cmake -G Ninja -B build -S $_pkgfqn \
    $ccache_args \
    -DCMAKE_SKIP_INSTALL_RPATH=ON \
    -DINSTALL_BINDIR=lib/qt6/bin \
    -DINSTALL_DOCDIR=share/doc/qt6 \
    -DINSTALL_ARCHDATADIR=lib/qt6 \
    -DINSTALL_DATADIR=share/qt6 \
    -DINSTALL_INCLUDEDIR=include/qt6 \
    -DINSTALL_MKSPECSDIR=lib/qt6/mkspecs \
    -DINSTALL_EXAMPLESDIR=share/doc/qt6/examples \
    -DINPUT_openssl=linked \
    -DQT_FEATURE_openssl_linked=ON \
    -DQT_FEATURE_static_runtime=ON \
    -DQT_FEATURE_system_sqlite=ON \
    -DQT_FEATURE_system_xcb_xinput=ON \
    -DQT_FEATURE_xcb=ON \
    -DQT_FEATURE_xcb_sm=ON \
    -DQT_FEATURE_icu=OFF \
    -DQT_FEATURE_kms=OFF \
    -DQT_FEATURE_eglfs=OFF \
    -DQT_FEATURE_gbm=OFF \
    -DQT_FEATURE_linuxfb=OFF \
    -DQT_FEATURE_gssapi=OFF \
    -DQT_FEATURE_fontconfig=ON \
    -DQT_FEATURE_dynamicgl=OFF \
    -DQT_FEATURE_opengl_dynamic=OFF \
    -DGLIB2_USE_PKG_CONFIG=ON \
    -DWAYLAND_USE_PKG_CONFIG=ON \
    -DCMAKE_DISABLE_FIND_PACKAGE_harfbuzz=TRUE \
    -DCMAKE_INSTALL_OLDINCLUDEDIR=$static_compat_prefix/include \
    -DGSSAPI_INCLUDE_DIRS=$static_compat_prefix/include \
    -DICU_INCLUDE_DIR=$static_compat_prefix/include \
    -DLibdrm_INCLUDE_DIR=$static_compat_prefix/include \
    -DGLESv2_INCLUDE_DIR=$static_compat_prefix/include \
    -Dgbm_INCLUDE_DIR=$static_compat_prefix/include
  VERBOSE=1 cmake --build build
}

package() {
  source static-compat-environment
  DESTDIR="$pkgdir" cmake --install build

  install -Dm644 $_pkgfqn/LICENSES/* -t "$pkgdir"/usr/share/licenses/$pkgname

  # Drop QMAKE_PRL_BUILD_DIR because reference the build dir
  find "$pkgdir" -type f -name '*.prl' \
    -exec sed -i -e '/^QMAKE_PRL_BUILD_DIR/d' {} \;

  rm -r "$pkgdir/$static_compat_prefix"/share/doc
}
