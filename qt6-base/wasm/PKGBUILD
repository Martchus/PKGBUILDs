# Maintainer: Martchus <martchus@gmx.net>

# All my PKGBUILDs are managed at https://github.com/Martchus/PKGBUILDs where
# you also find the URL of a binary repository.

# This file is created from PKGBUILD.sh.ep contained by the mentioned repository.
# Do not edit it manually! See README.md in the repository's root directory
# for more information.

# All patches are managed at https://github.com/Martchus/qtbase

pkgname=wasm-qt6-base
_qtver=6.8.1
pkgver=${_qtver/-/}
pkgrel=1
arch=(any)
url='https://www.qt.io'
license=(GPL3 LGPL3 FDL custom)
pkgdesc='A cross-platform application and UI framework (wasm)'
depends=('emscripten')
makedepends=('qt6-base' 'ninja' 'cmake')
optdepends=('qt6-base: development tools')
options=('!strip' '!buildflags' 'staticlibs' '!emptydirs')
groups=(wasm-qt6)
_pkgfqn="qtbase-everywhere-src-${_qtver}"
source=("https://download.qt.io/official_releases/qt/${pkgver%.*}/${_qtver}/submodules/${_pkgfqn}.tar.xz"
        '0001-Use-CMake-s-default-import-library-suffix.patch'
        '0002-Fix-finding-D-Bus.patch'
        '0003-Fix-using-static-PCRE2-and-DBus-1.patch'
        '0004-Fix-transitive-dependencies-of-static-libraries.patch'
        '0005-Fix-libjpeg-workaround-for-conflict-with-rpcndr.h.patch'
        '0006-Support-finding-static-MariaDB-client-library.patch'
        '0007-Allow-overriding-CMAKE_FIND_LIBRARY_SUFFIXES-to-pref.patch'
        '0008-Find-fontconfig-via-pkg-config-for-correct-handling-.patch'
        '0009-Fix-dependency-of-xcb-image-on-xcb-util.patch'
        '0010-Allow-using-properties-of-PkgConfig-targets-for-glib.patch'
        '0011-Allow-using-properties-of-PkgConfig-targets-for-Wayl.patch'
        '0012-Allow-overriding-preference-for-shared-libzstd-libra.patch'
        '0013-Fix-errors-due-to-disabled-exceptions-with-cpp_winrt.patch'
        '0014-Fix-setting-exception-flags-of-plugin-targets.patch'
        '0015-Link-corelib-correctly-against-runtimeobject-when-co.patch'
        '0016-Workaround-linker-error-about-missing-symbol-__sync_.patch'
        '0017-Workaround-Unknown-CMake-command-_qt_test_emscripten.patch'
        '0018-Fix-configuration-when-EMSCRIPTEN_ROOT-is-an-absolut.patch')
sha256sums=('40b14562ef3bd779bc0e0418ea2ae08fa28235f8ea6e8c0cb3bce1d6ad58dcaf'
            'd9e52174bc67de800d8c7d6849d57070b9c252822aa155965885ecbaf6a599e6'
            '5ad195693ee54833f16dc8dd2645e8eb929818591e8dfde1bdd90933d5769552'
            '7c3d0814ab948a2974f26a74d33d16be18f7c3dee9e656920e0310c97ed26c70'
            '83dfad20eefddfb0959a99fcbb99cddcf49469bbf2fe2aef138e77e57594ecf6'
            'd65c79d9ab12e9e7b15918ba5567c3d792761bb922473a06ab7762aa7e46e4e7'
            '9e9fb4f4f2ed25310e3b9d8983777deb1d7bc70b254bccfbe0a00740c42dbc42'
            '6ff6ef06978ecf35eb58d3c9adc635469d860704d47bb04c1e0a002afb32fcb9'
            '15959b2a4aa423355632a01729f2f9d28328b66222c09728437caccabdd89eff'
            '697651aefb33425e7cddefc73c93149f8f99adcfbc5723a459c665d9ee125a70'
            '353b5cd748e0d5f6f8c6297436e716ed85d8dc3e6ea1d4df4150407c4f2e26d0'
            'b764833f2ad995387edcc1c69d0dc77a601b44d36817765b94d7b7b1b4f8fa9c'
            '612d637d1a1ecf3f6e69383bd24f17fc3870dddf73294f355f1272c732df01c4'
            'd62957971a884702f6bb211ff49f2806ce0d61fb09ecb372832a5a787cb97ecc'
            'b6be14723fb82d0b0bb4faa8d530d0ec05e65d514862961002e99501d88a9eae'
            'f3635b1ad1b4630b214fbac3140710d10fb55c1199a48c40d22c336ae1836bb2'
            '6a319f037b4643cb4c2d71574713719a2941e094a080d01b55befb624f00d638'
            '1f38dbf9f3ee5dd47c54e5365f5ee0cfcdceb897e53af4d26a476cab15161b5d'
            '7b5f30fbf757647a58230c709d97f980e6019562da549aa714a6855287ddd4d2')

prepare () {
  cd $_pkgfqn

  # apply patches; further descriptions can be found in patch files itself
  for patch in "$srcdir/"*.patch; do
    msg2 "Applying patch $patch"
    patch -p1 -i "$patch"
  done
}

build() {
  export EMSDK=/usr/lib/emscripten
  /usr/lib/emscripten/emcmake cmake -G Ninja -B build -S $_pkgfqn \
      -DCMAKE_FIND_ROOT_PATH:PATH="/usr/lib/emscripten/system" \
      -DCMAKE_INSTALL_PREFIX:PATH="/usr/lib/emscripten/system" \
      -DBUILD_SHARED_LIBS=OFF \
      -DFEATURE_static_runtime=ON \
      -DFEATURE_thread=ON \
      -DQT_INCLUDE_DIRS_NO_SYSTEM=ON \
      -DQT_HOST_PATH=/usr
  VERBOSE=1 cmake --build build
}

package() {
  DESTDIR="$pkgdir" cmake --install build

  install -Dm644 $_pkgfqn/LICENSES/* -t "$pkgdir"/usr/share/licenses/$pkgname

  find "${pkgdir}"/usr/lib/emscripten/system -type f -name 'lib*.so' -exec /usr/lib/emscripten/emstrip -g --strip-unneeded {} \;
  find "${pkgdir}"/usr/lib/emscripten/system -type f -name 'lib*.a' -exec /usr/lib/emscripten/emstrip -g {} \;
  [[ -d "${pkgdir}"/usr/lib/emscripten/system/share/doc ]] && rm -r "${pkgdir}"/usr/lib/emscripten/system/share/doc || true
}
